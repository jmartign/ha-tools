#!/bin/sh
#
# A tool to deal with errors in the CIB.
#
# http://github.com/joekhoobyar/ha-tools
#
# Author:		Joe Khoobyar <joe@ankhcraft.com>
# License:	GNU General Public License (GPL) version 2
# Copyright (c) 2009 All Rights Reserved
#

version=0.1
progname=$(basename $0)

print_usage() {
    cat <<EOF
Usage: $progname [options] command resource-id

A tool to deal with errors in the CIB.

Options:
  -h, --help          print this usage message
  -V, --version       print program version
  -v, --verbose       verbose output

  -f, --force         force the operation
  -a, --all           apply to all nodes
  -H, --host NODE     apply to only this node

Commands:

  -C, --clear         clear resource errors
EOF
}

print_version()
{
    cat <<EOF
$progname (ha-tools) $version
Copyright (C) 2009 All Rights Reserved
Written by Joe Khoobyar <joe@ankhcraft.com>
EOF
}

SHORTOPTS="hVvfaH:C"
LONGOPTS="help,version,verbose,force,all,host,clear"
if $(getopt -T >/dev/null 2>&1) ; [ $? = 4 ] ; then # New longopts getopt.
    OPTS=$(getopt -o $SHORTOPTS --long $LONGOPTS -n "$progname" -- "$@")
else
    case $1 in --help) print_usage; exit 0 ;; esac
    case $1 in --version) print_version ; exit 0 ;; esac
    OPTS=$(getopt $SHORTOPTS "$@")
fi 

[ "$OPTS" = " --" ] && OPTS=" -h --"

eval set -- "${OPTS}"

while [ $# -gt 0 ]; do
case $1 in
  -h|--help)
    print_usage; exit 0
    ;;
  -V|--version)
    print_version; exit 0
    ;;
  -v|--verbose)
    export VERBOSE=1; shift
    ;;
  -a|--all)
		NODES=$(ccm_tool -p)
  	;;
  -H|--host)
		NODES=$2
		shift 2
  	;;
  -f|--force)
		FORCE="-f"
  	;;
  -C|--clear)
		if [ -z "$NODES" ]; then print_usage; exit 1; fi
		for i in $NODES; do
			crm_resource $FORCE -C -H $i -r $3
		done
		exit 0
  	;;
  --)
    shift
    break
    ;;
  *)
    echo "Internal Error: option processing error: $1" 1>&2
    exit 1
    ;;
esac
shift
done

